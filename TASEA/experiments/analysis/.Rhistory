fill = METAMODEL)) +
ggplot2::geom_line(size=1.7) +
#ggplot2::geom_ribbon(alpha=0.5) +
ggplot2::facet_wrap(~NVAR, scales = "fixed",
ncol = 1, nrow = length(unique(aggdata$NVAR))) +
ggplot2::xlab("Function evaluations (%)") +
ggplot2::ylab("Mean improv. over the best initial solution (%)") +
ggplot2::scale_color_discrete(name = "Metamodel: ") +
ggplot2::scale_fill_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position="bottom",
legend.direction = "horizontal",
text = element_text(size = 24))
filename = paste("./figures/convergence-by-problem_de_metamodels/de_metamodels/convergence_de_metamodels_", as.character(prob), ".pdf", sep="")
ggplot2::ggsave(filename, plot=fig, width=10, height=25)
for (nvar in unique(aggdata$NVAR)) {
fig <- ggplot2::ggplot(subset(subset(aggdata, PROB == prob), NVAR == nvar),
ggplot2::aes(x    = NORM.NEVAL,
y    = MEAN.IMPROV.OBJ,
ymin = MEAN.IMPROV.OBJ - SE.IMPROV.OBJ,
ymax = MEAN.IMPROV.OBJ + SE.IMPROV.OBJ,
color = METAMODEL,
fill = METAMODEL)) +
ggplot2::geom_line(size=1.7) +
#ggplot2::geom_ribbon(alpha=0.5) +
ggplot2::xlab("Function evaluations (%)") +
ggplot2::ylab("Mean improv. over the best initial solution (%)") +
ggplot2::scale_color_discrete(name = "Metamodel: ") +
ggplot2::scale_fill_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position="bottom",
legend.direction = "horizontal",
text = element_text(size = 20))
filename = paste("./figures/convergence_de_metamodels/convergence_de_metamodels_", as.character(prob), "_", as.character(nvar), ".pdf", sep="")
ggplot2::ggsave(filename, plot=fig, width=10, height=7)
}
}
# ==============================================================================
# Convergence (by poblem and size) of all metamodels against the SAEA-DE
# Process data
aggdata <- aggdata %>%
dplyr::group_by(PROB, NVAR, REP) %>%
dplyr::mutate(REF.BEST.OBJ = max(BEST.OBJ),
REF.NEVAL = max(NEVAL)) %>%
dplyr::ungroup() %>%
dplyr::mutate(NORM.NEVAL = 100 * (NEVAL / REF.NEVAL)) %>%
#dplyr::filter(NORM.NEVAL <= 50) %>%
dplyr::group_by(PROB, NVAR, METAMODEL, NORM.NEVAL) %>%
dplyr::summarise(MEAN.IMPROV.OBJ = mean(IMPROV.OBJ),
SE.IMPROV.OBJ = sd(IMPROV.OBJ) / sqrt(n()))
# Plot data
metamodels <- c('OK', 'RBF')
# ==============================================================================
# Convergence (by poblem and size) of all metamodels against the SAEA-DE
# Process data
aggdata <- data.results %>%
dplyr::group_by(PROB, NVAR, REP) %>%
dplyr::mutate(REF.BEST.OBJ = max(BEST.OBJ),
REF.NEVAL = max(NEVAL)) %>%
dplyr::ungroup() %>%
dplyr::mutate(NORM.NEVAL = 100 * (NEVAL / REF.NEVAL)) %>%
#dplyr::filter(NORM.NEVAL <= 50) %>%
dplyr::group_by(PROB, NVAR, METAMODEL, NORM.NEVAL) %>%
dplyr::summarise(MEAN.IMPROV.OBJ = mean(IMPROV.OBJ),
SE.IMPROV.OBJ = sd(IMPROV.OBJ) / sqrt(n()))
# Plot data
metamodels <- c('OK', 'RBF')
for (metamodel in metamodels) {
for (prob in unique(aggdata$PROB)) {
# Filter metamodels
aggdata2 <- aggdata %>%
dplyr::filter(METAMODEL %in% c('DE', metamodel))
aggdata2$METAMODEL <- factor(aggdata2$METAMODEL, unique(aggdata2$METAMODEL))
fig <- ggplot2::ggplot(subset(aggdata2, PROB == prob),
ggplot2::aes(x    = NORM.NEVAL,
y    = MEAN.IMPROV.OBJ,
ymin = MEAN.IMPROV.OBJ - SE.IMPROV.OBJ,
ymax = MEAN.IMPROV.OBJ + SE.IMPROV.OBJ,
color = METAMODEL,
fill = METAMODEL)) +
ggplot2::geom_line(size=1.7) +
ggplot2::geom_ribbon(alpha=0.5) +
ggplot2::facet_wrap(~NVAR, scales = "fixed",
ncol = 1, nrow = length(unique(aggdata$NVAR))) +
ggplot2::xlab("Function evaluations (%)") +
ggplot2::ylab("Mean improv. over the best initial solution (%)") +
ggplot2::scale_color_discrete(name = "Metamodel: ") +
ggplot2::scale_fill_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position="bottom",
legend.direction = "horizontal",
text = element_text(size = 24))
filename = paste("./figures/convergence-by-problem_de_metamodels/de_vs_metamodels/convergence_de_vs_", metamodel, "_", as.character(prob), ".pdf", sep="")
ggplot2::ggsave(filename, plot=fig, width=10, height=25)
for (nvar in unique(aggdata$NVAR)) {
fig <- ggplot2::ggplot(subset(subset(aggdata2, PROB == prob), NVAR == nvar),
ggplot2::aes(x    = NORM.NEVAL,
y    = MEAN.IMPROV.OBJ,
ymin = MEAN.IMPROV.OBJ - SE.IMPROV.OBJ,
ymax = MEAN.IMPROV.OBJ + SE.IMPROV.OBJ,
color = METAMODEL,
fill = METAMODEL)) +
ggplot2::geom_line(size=1.7) +
ggplot2::geom_ribbon(alpha=0.5) +
ggplot2::xlab("Function evaluations (%)") +
ggplot2::ylab("Mean improv. over the best initial solution (%)") +
ggplot2::scale_color_discrete(name = "Metamodel: ") +
ggplot2::scale_fill_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position="bottom",
legend.direction = "horizontal",
text = element_text(size = 20))
filename = paste("./figures/convergence-by-problem_de_metamodels/de_vs_metamodels/conv_de_vs_", metamodel, "_", as.character(prob), "_", as.character(nvar), ".pdf", sep="")
ggplot2::ggsave(filename, plot=fig, width=10, height=7)
}
}
}
rm(list = ls())
dependencies.list <- c(
"dplyr",
"ggplot2",
"ggforce",
"xtable",
"PMCMR"
)
dependencies.missing <- dependencies.list[!(dependencies.list %in% installed.packages()[,"Package"])]
if (length(dependencies.missing) > 0) {
# Notify for missing libraries
print("The following packages are required but are not installed:")
print(dependencies.missing)
dependencies.install <- readline(prompt = "Do you want them to be installed (Y/n)? ")
if (any(tolower(dependencies.install) == c("y", "yes"))) {
install.packages(dependencies.missing)
}
}
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(ggforce))
suppressMessages(library(xtable))
suppressMessages(library(PMCMR))
#===============================================================================
# Box-plot metamodel and DE
# Read data file
mm.results <- read.csv("./data/metamodels.csv", header = TRUE, stringsAsFactors = FALSE)
de.results <- read.csv("./data/de.csv", header = TRUE, stringsAsFactors = FALSE)
# Join data from DE-best algorithm
de.results["MEAN.DIFF"] = numeric()
data.results <- union(mm.results, de.results)
data.results$PROB <- factor(data.results$PROB, unique(data.results$PROB))
# Change metamodel names
data.results$METAMODEL <- as.factor(data.results$METAMODEL)
levels(data.results$METAMODEL) <- list(OK  = "tasea-ordinary-kriging",
#UK1 = "universal-kriging1",
#UK2 = "universal-kriging2",
#BK  = "blind-kriging",
RBF = "tasea-rbf-gaussian",
DE  = "DEbest")
# Compute objective function improvement
data.results <- data.results %>%
dplyr::group_by(PROB, NVAR, METAMODEL, REP) %>%
dplyr::mutate(IMPROV.OBJ = 100 * ((max(BEST.OBJ) - BEST.OBJ) / max(BEST.OBJ))) %>%
dplyr::ungroup()
# ==============================================================================
# Blox-plot
# Function used to group data
aggdata <- data.results
classify <- Vectorize(function(aggdata) {
result <- factor(levels = c("25%", "50%", "75%", "100%"), ordered = TRUE)
if (aggdata <= 0.25) {
result <- "25%"
} else if (aggdata <= 0.50) {
result <- "50%"
} else if (aggdata <= 0.75) {
result <- "75%"
} else {
result <- "100%"
}
return(result)
}, vectorize.args = c("aggdata"))
# Pre-process data
aggdata <- aggdata %>%
dplyr::group_by(PROB, NVAR, METAMODEL, REP) %>%
dplyr::mutate(PROGRESS = NEVAL / max(NEVAL),
GROUP = classify(PROGRESS)) %>%
dplyr::group_by(PROB, NVAR, METAMODEL, REP, GROUP) %>%
dplyr::filter(PROGRESS == max(PROGRESS))
# Plot data for each pair problem/size
for (prob in unique(aggdata$PROB)) {
for (nvar in unique(aggdata$NVAR)) {
fig <- ggplot2::ggplot(subset(subset(aggdata, PROB==prob), NVAR==nvar),
ggplot2::aes(x=GROUP, y=IMPROV.OBJ, fill=METAMODEL)) +
ggplot2::geom_boxplot() +
ggplot2::xlab("Function evalutions ") +
ggplot2::ylab("Improv. over the best initial solution (%)") +
ggplot2::scale_x_discrete(limits = c("25%", "50%", "75%", "100%")) +
ggplot2::scale_fill_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position = "bottom",
legend.direction = "horizontal",
text = element_text(size = 24))
filename = paste("./figures/boxplot_de_metamodels/boxplot_de_metamodels_", as.character(prob), "_", as.character(nvar), ".pdf", sep="")
ggplot2::ggsave(filename, plot=fig, width=10, height=7)
}
}
# Pre-process data
aggdata <- data.results %>%
# Normalized metamodel building time
dplyr::group_by(PROB, NVAR, REP, METAMODEL) %>%
dplyr::mutate(BUILD.TIME = mean(TOTAL.TIME.S)) %>%
dplyr::group_by(PROB, NVAR, REP) %>%
dplyr::mutate(NORM.TIME = BUILD.TIME / max(BUILD.TIME)) %>%
# Keep data from the last iteration
dplyr::group_by(PROB, NVAR, REP, METAMODEL) %>%
dplyr::filter(ITER == max(ITER)) %>%
# Summarise results
dplyr::group_by(METAMODEL) %>%
dplyr::summarise(MEAN.IMPROV = mean(IMPROV.OBJ),
SE.IMPROV = sd(IMPROV.OBJ) / sqrt(n()),
MEAN.TIME = mean(NORM.TIME),
SE.TIME = sd(NORM.TIME) / sqrt(n()))
# Plot data
fig <- ggplot2::ggplot(aggdata,
ggplot2::aes(x    = MEAN.TIME,
xmin = MEAN.TIME - SE.TIME,
xmax = MEAN.TIME + SE.TIME,
y    = MEAN.IMPROV,
ymin = MEAN.IMPROV - SE.IMPROV,
ymax = MEAN.IMPROV + SE.IMPROV,
colour = METAMODEL)) +
ggplot2::geom_point(shape = 22, size = 3) +
ggplot2::geom_errorbarh(height = 0, size = 0.75) +
ggplot2::geom_errorbar(width = 0, size = 0.75) +
ggplot2::xlab("Model building runtime (normalized)") +
ggplot2::ylab("Mean improv. over the best initial solution (%)") +
ggplot2::scale_color_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position="bottom",
legend.direction = "horizontal",
text = element_text(size = 20)) +
ggforce::facet_zoom(x = METAMODEL %in% c("OK", "RBF", "DE"), zoom.size = 1, show.area = TRUE, shrink = TRUE)
filename = "./figures/crossbar_de_metamodels/crossbar_de_metamodesl.pdf"
ggplot2::ggsave(filename, plot=fig, width=10, height=7)
# Pre-process data
aggdata <- data.results %>%
# Normalized metamodel building time
dplyr::group_by(PROB, NVAR, REP, METAMODEL) %>%
dplyr::mutate(BUILD.TIME = mean(TOTAL.TIME.S)) %>%
dplyr::group_by(PROB, NVAR, REP) %>%
dplyr::mutate(NORM.TIME = BUILD.TIME / max(BUILD.TIME)) %>%
# Keep data from the last iteration
dplyr::group_by(PROB, NVAR, REP, METAMODEL) %>%
dplyr::filter(ITER == max(ITER)) %>%
# Summarise results
dplyr::group_by(PROB, METAMODEL) %>%
dplyr::summarise(MEAN.IMPROV = mean(IMPROV.OBJ),
SE.IMPROV = sd(IMPROV.OBJ) / sqrt(n()),
MEAN.TIME = mean(NORM.TIME),
SE.TIME = sd(NORM.TIME) / sqrt(n()))
# Plot data
for (prob in unique(aggdata$PROB)) {
fig <- ggplot2::ggplot(subset(aggdata, PROB == prob),
ggplot2::aes(x    = MEAN.TIME,
xmin = MEAN.TIME - SE.TIME,
xmax = MEAN.TIME + SE.TIME,
y    = MEAN.IMPROV,
ymin = MEAN.IMPROV - SE.IMPROV,
ymax = MEAN.IMPROV + SE.IMPROV,
colour = METAMODEL)) +
ggplot2::geom_point(shape = 22, size = 3) +
ggplot2::geom_errorbarh(height = 0, size = 0.75) +
ggplot2::geom_errorbar(width = 0, size = 0.75) +
ggplot2::xlab("Model building runtime (normalized)") +
ggplot2::ylab("Mean improv. over the best initial solution (%)") +
ggplot2::scale_color_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position="bottom",
legend.direction = "horizontal",
text = element_text(size = 20))
filename = paste("./figures/crossbar-by-problem_de_metamodels/crossbar_de_metamodels_", as.character(prob), ".pdf", sep="")
ggplot2::ggsave(filename, plot=fig, width=10, height=7)
}
# Pre-process data
aggdata <- data.results %>%
# Normalized metamodel building time
dplyr::mutate(PROB.NVAR = paste(PROB, '_', NVAR, sep = '')) %>%
dplyr::group_by(PROB, NVAR, REP, METAMODEL) %>%
dplyr::mutate(BUILD.TIME = mean(TOTAL.TIME.S)) %>%
dplyr::group_by(PROB, NVAR, REP) %>%
dplyr::mutate(NORM.TIME = BUILD.TIME / max(BUILD.TIME)) %>%
# Keep data from the last iteration
dplyr::group_by(PROB, NVAR, REP, METAMODEL) %>%
dplyr::filter(ITER == max(ITER))
# ANOVA
fit.data <- aov(IMPROV.OBJ ~ METAMODEL + PROB.NVAR, data = aggdata)
anova(fit.data)
# Tukey Honestly Significant Differences (multiple comparisons)
tukey.result <- TukeyHSD(fit.data, which = c('METAMODEL'), conf.level = 0.95)
# Plot of confidence intervals (improvement)
results.improv <- data.frame(COMPARISON = row.names(tukey.result$METAMODEL),
ESTIMATE   = tukey.result$METAMODEL[, 'diff'],
CI.LB      = tukey.result$METAMODEL[, 'lwr'],
CI.UB      = tukey.result$METAMODEL[, 'upr'])
fig <- ggplot2::ggplot(results.improv,
ggplot2::aes(x = COMPARISON, y = ESTIMATE, ymin = CI.LB, ymax = CI.UB)) +
ggplot2::geom_hline(yintercept = 0, size = 1.3, col = 2, linetype = 2) +
ggplot2::geom_pointrange(fatten = 2, size = 1.3) +
ggplot2::coord_flip() +
ggplot2::xlab("Comparison") +
ggplot2::ylab("Mean difference in percentage improvement") +
ggplot2::theme(text = element_text(size = 24),
legend.position = "none",
panel.background = ggplot2::element_blank(),
panel.border = ggplot2::element_rect(colour = "black", fill = NA, size = 1))
filename = "./figures/ci_de_metamodels/ci-improv_de_metamodels.pdf"
ggplot2::ggsave(filename, plot=fig, width=10, height=7)
# ANOVA
fit.data <- aov(NORM.TIME ~ METAMODEL + PROB.NVAR, data = aggdata)
anova(fit.data)
# Tukey Honestly Significant Differences (multiple comparisons)
tukey.result <- TukeyHSD(fit.data, conf.level = 0.95)
# Plot of confidence intervals (improvement)
results.time <- data.frame(COMPARISON = row.names(tukey.result$METAMODEL),
ESTIMATE   = tukey.result$METAMODEL[, 'diff'],
CI.LB      = tukey.result$METAMODEL[, 'lwr'],
CI.UB      = tukey.result$METAMODEL[, 'upr'])
fig <- ggplot2::ggplot(results.time,
ggplot2::aes(x = COMPARISON, y = ESTIMATE, ymin = CI.LB, ymax = CI.UB)) +
ggplot2::geom_hline(yintercept = 0, size = 1.3, col = 2, linetype = 2) +
ggplot2::geom_pointrange(fatten = 2, size = 1.3) +
ggplot2::coord_flip() +
ggplot2::xlab("Comparison") +
ggplot2::ylab("Mean difference in normalized building time") +
ggplot2::theme(text = element_text(size = 24),
legend.position = "none",
panel.background = ggplot2::element_blank(),
panel.border = ggplot2::element_rect(colour = "black", fill = NA, size = 1))
filename = "./figures/ci_de_metamodels/ci-time_de_metamodels.pdf"
ggplot2::ggsave(filename, plot=fig, width=10, height=7)
# ==============================================================================
# Convergence
# Process data
aggdata <- data.results %>%
dplyr::group_by(PROB, NVAR, REP) %>%
dplyr::mutate(REF.BEST.OBJ = max(BEST.OBJ),
REF.NEVAL = max(NEVAL)) %>%
dplyr::ungroup() %>%
dplyr::mutate(NORM.NEVAL = 100 * (NEVAL / REF.NEVAL)) %>%
dplyr::group_by(PROB, NVAR, METAMODEL, NORM.NEVAL) %>%
dplyr::summarise(MEAN.IMPROV.OBJ = mean(IMPROV.OBJ),
SE.IMPROV.OBJ = sd(IMPROV.OBJ) / sqrt(n()))
# Plot data
for (prob in unique(aggdata$PROB)) {
fig <- ggplot2::ggplot(subset(aggdata, PROB == prob),
ggplot2::aes(x    = NORM.NEVAL,
y    = MEAN.IMPROV.OBJ,
ymin = MEAN.IMPROV.OBJ - SE.IMPROV.OBJ,
ymax = MEAN.IMPROV.OBJ + SE.IMPROV.OBJ,
color = METAMODEL,
fill = METAMODEL)) +
ggplot2::geom_line(size=1.7) +
#ggplot2::geom_ribbon(alpha=0.5) +
ggplot2::facet_wrap(~NVAR, scales = "fixed",
ncol = 1, nrow = length(unique(aggdata$NVAR))) +
ggplot2::xlab("Function evaluations (%)") +
ggplot2::ylab("Mean improv. over the best initial solution (%)") +
ggplot2::scale_color_discrete(name = "Metamodel: ") +
ggplot2::scale_fill_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position="bottom",
legend.direction = "horizontal",
text = element_text(size = 24))
filename = paste("./figures/convergence-by-problem_de_metamodels/de_metamodels/convergence_de_metamodels_", as.character(prob), ".pdf", sep="")
ggplot2::ggsave(filename, plot=fig, width=10, height=25)
for (nvar in unique(aggdata$NVAR)) {
fig <- ggplot2::ggplot(subset(subset(aggdata, PROB == prob), NVAR == nvar),
ggplot2::aes(x    = NORM.NEVAL,
y    = MEAN.IMPROV.OBJ,
ymin = MEAN.IMPROV.OBJ - SE.IMPROV.OBJ,
ymax = MEAN.IMPROV.OBJ + SE.IMPROV.OBJ,
color = METAMODEL,
fill = METAMODEL)) +
ggplot2::geom_line(size=1.7) +
#ggplot2::geom_ribbon(alpha=0.5) +
ggplot2::xlab("Function evaluations (%)") +
ggplot2::ylab("Mean improv. over the best initial solution (%)") +
ggplot2::scale_color_discrete(name = "Metamodel: ") +
ggplot2::scale_fill_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position="bottom",
legend.direction = "horizontal",
text = element_text(size = 20))
filename = paste("./figures/convergence_de_metamodels/convergence_de_metamodels_", as.character(prob), "_", as.character(nvar), ".pdf", sep="")
ggplot2::ggsave(filename, plot=fig, width=10, height=7)
}
}
# ==============================================================================
# Convergence (by poblem and size) of all metamodels against the SAEA-DE
# Process data
aggdata <- data.results %>%
dplyr::group_by(PROB, NVAR, REP) %>%
dplyr::mutate(REF.BEST.OBJ = max(BEST.OBJ),
REF.NEVAL = max(NEVAL)) %>%
dplyr::ungroup() %>%
dplyr::mutate(NORM.NEVAL = 100 * (NEVAL / REF.NEVAL)) %>%
#dplyr::filter(NORM.NEVAL <= 50) %>%
dplyr::group_by(PROB, NVAR, METAMODEL, NORM.NEVAL) %>%
dplyr::summarise(MEAN.IMPROV.OBJ = mean(IMPROV.OBJ),
SE.IMPROV.OBJ = sd(IMPROV.OBJ) / sqrt(n()))
# Plot data
metamodels <- c('OK', 'RBF')
for (metamodel in metamodels) {
for (prob in unique(aggdata$PROB)) {
# Filter metamodels
aggdata2 <- aggdata %>%
dplyr::filter(METAMODEL %in% c('DE', metamodel))
aggdata2$METAMODEL <- factor(aggdata2$METAMODEL, unique(aggdata2$METAMODEL))
fig <- ggplot2::ggplot(subset(aggdata2, PROB == prob),
ggplot2::aes(x    = NORM.NEVAL,
y    = MEAN.IMPROV.OBJ,
ymin = MEAN.IMPROV.OBJ - SE.IMPROV.OBJ,
ymax = MEAN.IMPROV.OBJ + SE.IMPROV.OBJ,
color = METAMODEL,
fill = METAMODEL)) +
ggplot2::geom_line(size=1.7) +
ggplot2::geom_ribbon(alpha=0.5) +
ggplot2::facet_wrap(~NVAR, scales = "fixed",
ncol = 1, nrow = length(unique(aggdata$NVAR))) +
ggplot2::xlab("Function evaluations (%)") +
ggplot2::ylab("Mean improv. over the best initial solution (%)") +
ggplot2::scale_color_discrete(name = "Metamodel: ") +
ggplot2::scale_fill_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position="bottom",
legend.direction = "horizontal",
text = element_text(size = 24))
filename = paste("./figures/convergence-by-problem_de_metamodels/de_vs_metamodels/convergence_de_vs_", metamodel, "_", as.character(prob), ".pdf", sep="")
ggplot2::ggsave(filename, plot=fig, width=10, height=25)
for (nvar in unique(aggdata$NVAR)) {
fig <- ggplot2::ggplot(subset(subset(aggdata2, PROB == prob), NVAR == nvar),
ggplot2::aes(x    = NORM.NEVAL,
y    = MEAN.IMPROV.OBJ,
ymin = MEAN.IMPROV.OBJ - SE.IMPROV.OBJ,
ymax = MEAN.IMPROV.OBJ + SE.IMPROV.OBJ,
color = METAMODEL,
fill = METAMODEL)) +
ggplot2::geom_line(size=1.7) +
ggplot2::geom_ribbon(alpha=0.5) +
ggplot2::xlab("Function evaluations (%)") +
ggplot2::ylab("Mean improv. over the best initial solution (%)") +
ggplot2::scale_color_discrete(name = "Metamodel: ") +
ggplot2::scale_fill_discrete(name = "Metamodel: ") +
ggplot2::theme(legend.position="bottom",
legend.direction = "horizontal",
text = element_text(size = 20))
filename = paste("./figures/convergence-by-problem_de_metamodels/de_vs_metamodels/conv_de_vs_", metamodel, "_", as.character(prob), "_", as.character(nvar), ".pdf", sep="")
ggplot2::ggsave(filename, plot=fig, width=10, height=7)
}
}
}
# Pre-process data
aggdata <- data.results %>%
dplyr::group_by(PROB, NVAR, METAMODEL, REP) %>%
dplyr::filter(ITER == max(ITER)) %>%
dplyr::group_by(NVAR, METAMODEL) %>%
dplyr::summarise(MEAN.IMPROV.OBJ = mean(IMPROV.OBJ),
STD.IMPROV.OBJ = sd(IMPROV.OBJ))
# Mean
table.results <- with(aggdata,
cbind(NVAR = aggdata$NVAR[aggdata$METAMODEL == "OK"],
OK = aggdata$MEAN.IMPROV.OBJ[aggdata$METAMODEL == "OK"],
RBF = aggdata$MEAN.IMPROV.OBJ[aggdata$METAMODEL == "RBF"],
DE = aggdata$MEAN.IMPROV.OBJ[aggdata$METAMODEL == "DE"]))
xtable(table.results, digits = c(6,0,4,4,4))
# Standard deviation
table.results <- with(aggdata,
cbind(NVAR = aggdata$NVAR[aggdata$METAMODEL == "OK"],
OK = aggdata$STD.IMPROV.OBJ[aggdata$METAMODEL == "OK"],
RBF = aggdata$STD.IMPROV.OBJ[aggdata$METAMODEL == "RBF"],
DE = aggdata$STD.IMPROV.OBJ[aggdata$METAMODEL == "DE"]))
xtable(table.results, digits = c(6,0,4,4,4))
# Pre-process data
aggdata <- data.results %>%
dplyr::group_by(PROB, NVAR, METAMODEL, REP) %>%
dplyr::summarise(BUILD.TIME = mean(TOTAL.TIME.S)) %>%
dplyr::group_by(NVAR, METAMODEL) %>%
dplyr::summarise(MEAN.TIME = mean(BUILD.TIME),
STD.TIME = sd(BUILD.TIME))
# Mean time
table.results <- with(aggdata,
cbind(NVAR = aggdata$NVAR[aggdata$METAMODEL == "OK"],
OK = aggdata$MEAN.TIME[aggdata$METAMODEL == "OK"],
RBF = aggdata$MEAN.TIME[aggdata$METAMODEL == "RBF"],
DE = aggdata$MEAN.TIME[aggdata$METAMODEL == "DE"]))
xtable(table.results, digits = c(6,0,4,4,4))
# Std time
table.results <- with(aggdata,
cbind(NVAR = aggdata$NVAR[aggdata$METAMODEL == "OK"],
OK = aggdata$STD.TIME[aggdata$METAMODEL == "OK"],
RBF = aggdata$STD.TIME[aggdata$METAMODEL == "RBF"],
DE = aggdata$STD.TIME[aggdata$METAMODEL == "DE"]))
xtable(table.results, digits = c(6,0,4,4,4))
# Pre-process data
aggdata <- data.results %>%
dplyr::group_by(PROB, NVAR, METAMODEL, REP) %>%
dplyr::filter(ITER == max(ITER)) %>%
dplyr::group_by(NVAR, METAMODEL) %>%
dplyr::summarise(MEAN.BEST.OBJ = mean(BEST.OBJ),
STD.BEST.OBJ = sd(BEST.OBJ))
# Mean
table.results <- with(aggdata,
cbind(NVAR = aggdata$NVAR[aggdata$METAMODEL == "OK"],
OK = aggdata$MEAN.BEST.OBJ[aggdata$METAMODEL == "OK"],
RBF = aggdata$MEAN.BEST.OBJ[aggdata$METAMODEL == "RBF"],
DE = aggdata$MEAN.BEST.OBJ[aggdata$METAMODEL == "DE"]))
xtable(table.results, digits = c(6,0,4,4,4))
# Standard deviation
table.results <- with(aggdata,
cbind(NVAR = aggdata$NVAR[aggdata$METAMODEL == "OK"],
OK = aggdata$STD.BEST.OBJ[aggdata$METAMODEL == "OK"],
RBF = aggdata$STD.BEST.OBJ[aggdata$METAMODEL == "RBF"],
DE = aggdata$STD.BEST.OBJ[aggdata$METAMODEL == "DE"]))
xtable(table.results, digits = c(6,0,4,4,4))
